<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.GroupMapper">

    <sql id="insertFields">
         headUrl,name,detail,createTime,status,contact,userId
    </sql>
    <insert id="createGroup">
        insert into groups (<include refid="insertFields"></include>)
        values (#{headUrl},#{name},#{detail},#{createTime},#{status},#{contact},#{userId})
    </insert>
    <delete id="deleteGroup">
        delete from groups where id=#{groupId}
    </delete>
    <select id="findAll" resultType="com.example.demo.eneity.Groups">
        select  * from groups order by status asc ;
    </select>
    <select id="findAllByStatus" resultType="com.example.demo.eneity.Groups">
        select  * from groups where (status= 1 or status = 2) order by createTime asc;
    </select>
    <update id="updateStatus">
        update groups set status = #{status} where id=#{groupId}
    </update>
    <select id="countGroupById" resultType="java.lang.Integer">
        select count(id) from groups where id=#{groupId}
    </select>
    <select id="findGroupById" resultType="com.example.demo.eneity.Groups">
        select * from groups where id=#{groupId}
    </select>
    <select id="findById" resultType="com.example.demo.eneity.Groups">
        select * from groups where (status = 1 or status)and id=#{groupId}
    </select>
    <select id="findGroup" resultType="com.example.demo.eneity.Groups">
        select * from groups where userId = #{userId} and id=#{groupId}
    </select>
    <select id="findGroupByUserId" resultType="com.example.demo.eneity.Groups">
        select * from groups where userId=#{userId}
    </select>
    <update id="updateDetail">
        update groups set detail = #{detail} where id=#{groupId}
    </update>
</mapper>